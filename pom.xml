<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-parent</artifactId>
        <version>36</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <groupId>io.quarkus.platform</groupId>
    <artifactId>quarkus-platform-config</artifactId>
    <name>Quarkus Platform - Configuration pom</name>
    <version>3.0.0.Alpha2</version>
    <packaging>pom</packaging>
    <description>Quarkus Universe platform aggregates extensions from Quarkus Core and those developed by the community into a single compatible and versioned set that application developers can reference from their applications to align the dependency versions</description>
    <url>https://github.com/quarkusio/quarkus-platform</url>

    <developers>
        <developer>
            <id>quarkus</id>
            <name>Quarkus Community</name>
            <organization>Quarkus</organization>
            <organizationUrl>https://quarkus.io</organizationUrl>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/quarkusio/quarkus-platform</url>
        <connection>scm:git:git@github.com:quarkusio/quarkus-platform.git</connection>
        <developerConnection>scm:git:git@github.com:quarkusio/quarkus-platform.git</developerConnection>
        <tag>3.0.0.Alpha2</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/quarkusio/quarkus/issues/</url>
    </issueManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.release>11</maven.compiler.release>
        <maven.compiler.parameters>true</maven.compiler.parameters>

        <graalvmHome>${env.GRAALVM_HOME}</graalvmHome>
        <postgres.url>jdbc:postgresql:hibernate_orm_test</postgres.url>

        <quarkus.version>3.0.0.Alpha2</quarkus.version>
        <quarkus-bom.version>${quarkus.version}</quarkus-bom.version>

        <camel-quarkus.version>2.14.0</camel-quarkus.version>
        <camel-quarkus-test-list.version>${camel-quarkus.version}</camel-quarkus-test-list.version>

        <!-- If you made changes to the integration tests pom of Amazon Services,
             make sure you have a look at the AmazonServices member section below
             and also at src/main/resources/xslt/amazon-services/test-pom.xsl
             as they might require adjustments. -->
        <quarkus-amazon-services.version>1.3.1</quarkus-amazon-services.version>
        <quarkus-config-consul.version>1.1.0</quarkus-config-consul.version>
        <quarkus-qpid-jms.version>2.0.0.Alpha1</quarkus-qpid-jms.version>
        <quarkus-hazelcast-client.version>3.0.0</quarkus-hazelcast-client.version>
        <debezium-quarkus-outbox.version>1.9.6.Final</debezium-quarkus-outbox.version>
        <quarkus-blaze-persistence.version>1.6.7</quarkus-blaze-persistence.version>
        <quarkus-cassandra-client.version>1.1.2</quarkus-cassandra-client.version>
        <quarkus-cassandra-client-test.version>${quarkus-cassandra-client.version}</quarkus-cassandra-client-test.version>

        <kogito-quarkus.version>1.31.0.Final</kogito-quarkus.version>
        <drools-quarkus.version>8.31.0.Final</drools-quarkus.version>
        <optaplanner-quarkus.version>8.31.0.Final</optaplanner-quarkus.version>

        <quarkus-google-cloud-services.version>1.2.2</quarkus-google-cloud-services.version>
        <quarkus-vault.version>2.1.0</quarkus-vault.version>
        <quarkus-operator-sdk.version>5.0.0.Beta1</quarkus-operator-sdk.version>

        <quarkus-platform-bom-generator.version>0.0.69</quarkus-platform-bom-generator.version>
        <build-helper-maven-plugin.version>3.1.0</build-helper-maven-plugin.version>
        <maven-plugin-plugin.version>3.6.1</maven-plugin-plugin.version>
        <useReleaseProfile>true</useReleaseProfile>

        <!-- the group-id (and the platform key) for the generated platform artifacts -->
        <platform.groupId>${project.groupId}</platform.groupId>
        <platform.version>${project.version}</platform.version>

        <!-- descriptor overrides -->
        <resourcesdir>${project.basedir}/src/main/resources</resourcesdir>
        <overridesfile>${resourcesdir}/extensions-overrides.json</overridesfile>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>sonatype-nexus-snapshots</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>sonatype-nexus-release</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <build>
        <extensions>
            <extension>
                <groupId>io.quarkus.bot</groupId>
                <artifactId>build-reporter-maven-extension</artifactId>
                <version>2.2.0</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <systemProperties>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        </systemProperties>
                        <excludedGroups>quarkus-platform-ignore</excludedGroups>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <excludedGroups>quarkus-platform-ignore</excludedGroups>
                        <systemProperties>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        </systemProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>${maven-plugin-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-platform-bom-maven-plugin</artifactId>
                    <version>${quarkus-platform-bom-generator.version}</version>
                    <configuration>
                        <platformConfig>
                            <!-- the platform release info -->
                            <release>
                                <!-- the platform (dev stack) key (if not specified, defaults to the root project's groudId) -->
                                <platformKey>${platform.groupId}</platformKey>
                                <!--
                                    | platform stream id, representing the flow of backward compatible releases (if not specified, defaults to the project's major.minor platform version)
                                -->
                                <!-- stream>2.0</stream -->
                                <!-- platform release  version, must be unique in the scope of the stream, (if not specified, defaults to the platform version) -->
                                <version>${platform.version}</version>
                            </release>
                            <!-- Universal / all-inclusive platform -->
                            <universal>
                                <!-- coordinates of the generated all-inclusive platform BOM -->
                                <bom>io.quarkus:quarkus-universe-bom:${project.version}</bom>
                                <!-- whether to skip installation of the all-inclusive platform BOM -->
                                <skipInstall>false</skipInstall>
                            </universal>
                            <!-- Quarkus core -->
                            <core>
                                <name>Core</name>
                                <bom>io.quarkus:quarkus-bom:${quarkus-bom.version}</bom>
                                <dependencyManagement>
                                </dependencyManagement>
                                <extensionGroupIds>
                                    <groupId>io.quarkus</groupId>
                                </extensionGroupIds>
                                <release>
                                    <lastDetectedBomUpdate>io.quarkus.platform:quarkus-bom:3.0.0.Alpha2</lastDetectedBomUpdate>
                                    <next>${platform.groupId}:quarkus-bom:${platform.version}</next>
                                </release>
                            </core>
                            <!-- Platform members -->
                            <members>
                                <member>
                                    <name>QpidJMS</name>
                                    <bom>org.amqphub.quarkus:quarkus-qpid-jms-bom:${quarkus-qpid-jms.version}</bom>
                                    <release>
                                        <lastDetectedBomUpdate>io.quarkus.platform:quarkus-qpid-jms-bom:3.0.0.Alpha2</lastDetectedBomUpdate>
                                        <next>${platform.groupId}:quarkus-qpid-jms-bom:${platform.version}</next>
                                    </release>
                                    <tests>
                                        <test>
                                            <artifact>org.amqphub.quarkus:quarkus-qpid-jms-integration-tests:${quarkus-qpid-jms.version}</artifact>
                                        </test>
                                    </tests>
                                </member>
                            </members>
                            <!-- Platform BOM generator configuration -->
                            <bomGenerator>
                                <!-- Config to enforce specific versions and excluding dependencies -->
                                <!--
                                <enforcedDependencies>
                                    <dependency>groupId:artifactId:desired-version</dependency>
                                </enforcedDependencies>
                                <excludedDependencies>
                                    <dependency>groupId:artifactId</dependency>
                                </excludedDependencies>
                                <excludedGroups>
                                    <excludedGroup>groupId</excludedGroup>
                                </excludedGroups>
                                -->
                                <excludedDependencies>
                                    <dependency>io.quarkus:quarkus-bom-quarkus-platform-descriptor:${quarkus-bom.version}:json</dependency>
                                    <dependency>io.quarkus:quarkus-bom-quarkus-platform-properties::properties</dependency>
                                    <dependency>com.oracle.instantclient:xstreams</dependency> <!-- provided dependency of a Debezium extension, supposed to be added by users manually -->
                                    <!-- Kogito: exclude Spring-related dependencies -->
                                    <dependency>org.kie.kogito:kogito-addons-springboot-cloudevents:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-events-decisions:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-events-kafka:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-events-mongodb:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-events-process-kafka:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-explainability:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-jobs-management:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-mail:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-messaging:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-monitoring-core:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-monitoring-elastic:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-monitoring-prometheus:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-process-management:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-process-svg:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-rest-exception-handler:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-task-management:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-task-notification:*</dependency>
                                    <dependency>org.kie.kogito:kogito-addons-springboot-tracing-decision:*</dependency>
                                    <dependency>org.kie.kogito:kogito-cloudevents-spring-boot-addon:*</dependency>
                                    <dependency>org.kie.kogito:kogito-decisions-spring-boot-starter:*</dependency>
                                    <dependency>org.kie.kogito:kogito-event-driven-decisions-springboot-addon:*</dependency>
                                    <dependency>org.kie.kogito:kogito-predictions-spring-boot-starter:*</dependency>
                                    <dependency>org.kie.kogito:kogito-processes-spring-boot-starter:*</dependency>
                                    <dependency>org.kie.kogito:kogito-rules-spring-boot-starter:*</dependency>
                                    <dependency>org.kie.kogito:kogito-serverless-workflow-spring-boot-starter:*</dependency>
                                    <dependency>org.kie.kogito:kogito-spring-boot-starter:*</dependency>
                                    <dependency>org.kie.kogito:kogito-spring-boot-test-utils:*</dependency>
                                    <dependency>org.kie.kogito:kogito-springboot-starter:*</dependency>
                                    <dependency>org.kie.kogito:monitoring-core-springboot-addon:*</dependency>
                                    <dependency>org.kie.kogito:monitoring-prometheus-springboot-addon:*</dependency>
                                    <!-- Log4j -->
                                    <dependency>log4j:log4j</dependency>
                                </excludedDependencies>
                            </bomGenerator>
                            <descriptorGenerator>
                                <overridesFile>${overridesfile}</overridesFile>
                                <skipCategoryCheck>true</skipCategoryCheck>
                                <ignoredArtifacts>
                                    <!-- relocated to the Quarkiverse repo -->
                                    <!-- Amazon services -->
                                    <artifact>io.quarkus:quarkus-amazon-common</artifact>
                                    <artifact>io.quarkus:quarkus-amazon-dynamodb</artifact>
                                    <artifact>io.quarkus:quarkus-amazon-iam</artifact>
                                    <artifact>io.quarkus:quarkus-amazon-kms</artifact>
                                    <artifact>io.quarkus:quarkus-amazon-s3</artifact>
                                    <artifact>io.quarkus:quarkus-amazon-secretsmanager</artifact>
                                    <artifact>io.quarkus:quarkus-amazon-ses</artifact>
                                    <artifact>io.quarkus:quarkus-amazon-sns</artifact>
                                    <artifact>io.quarkus:quarkus-amazon-sqs</artifact>
                                    <artifact>io.quarkus:quarkus-amazon-ssm</artifact>
                                    <!-- Amazon Alexa -->
                                    <artifact>io.quarkus:quarkus-amazon-alexa</artifact>
                                    <!-- Tika -->
                                    <artifact>io.quarkus:quarkus-tika</artifact>
                                    <!-- JGit -->
                                    <artifact>io.quarkus:quarkus-jgit</artifact>
                                    <!-- JSch -->
                                    <artifact>io.quarkus:quarkus-jsch</artifact>
                                    <!-- Hibernate Search ORM Elasticsearch AWS -->
                                    <artifact>io.quarkus:quarkus-hibernate-search-orm-elasticsearch-aws</artifact>
                                    <!-- Artemis -->
                                    <artifact>io.quarkus:quarkus-artemis-core</artifact>
                                    <artifact>io.quarkus:quarkus-artemis-jms</artifact>
                                    <!-- Consul config -->
                                    <artifact>io.quarkus:quarkus-consul-config</artifact>
                                    <!-- Logging Sentry -->
                                    <artifact>io.quarkus:quarkus-logging-sentry</artifact>
                                    <!-- Neo4j -->
                                    <artifact>io.quarkus:quarkus-neo4j</artifact>
                                    <!-- Vault -->
                                    <artifact>io.quarkus:quarkus-vault</artifact>
                                </ignoredArtifacts>
                            </descriptorGenerator>
                            <attachedMavenPlugin>
                                <originalPluginCoords>io.quarkus:quarkus-maven-plugin:${quarkus.version}</originalPluginCoords>
                                <targetPluginCoords>${platform.groupId}:quarkus-maven-plugin:${platform.version}</targetPluginCoords>
                            </attachedMavenPlugin>

                            <!-- Uncomment to create a ZIP with the BOM reports
                            <generateBomReportsZip>${project.build.directory}/reports.zip</generateBomReportsZip>
                            -->
                        </platformConfig>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.2.7</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-platform-bom-maven-plugin</artifactId>
                <inherited>false</inherited>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>generate-platform-project</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generate-platform-project</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>build-platform-project</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>invoke-platform-project</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>release</id>
            <modules>
                <!-- To properly push the generated platform project as part of the release, it has to be added as a module to make it visible
                     to the release plugin which will then be able to transform the generated POMs -->
                <module>generated-platform-project</module>
            </modules>
            <build>
                <plugins>
                    <!-- Given that the generated platform project is included as a module in this profile,
                         the platform invoker goal becomes redundant and can be disabled -->
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-platform-bom-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-platform-project</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>invoke-platform-project</goal>
                                </goals>
                                <configuration>
                                    <skip>true</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-release-plugin</artifactId>
                        <configuration>
                            <!-- After the release plugin has transformed all the POMs, we need to re-generate the platform configs (mainly to re-generated the POM properties)
                                 taking into account the upcoming release version. Although this will happen at the `process-resources` phase anyway, this should be done
                                 using the platform invoker goal (otherwise, some dependencies relying on the generated properties may fail to resolve).
                                 Here we are deactivating the release profile to exclude the generated-platform-project module. -->
                            <preparationGoals>clean verify -P !release -DrecordUpdatedBoms</preparationGoals>
                            <completionGoals>process-resources -P !release</completionGoals>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!--
                        ## IMPORTANT ##
                        In your ~/.m2/settings.xml you need to add and edit the following profile:
                        <profile>
                            <id>release</id>
                            <properties>
                                <gpg.useagent>false</gpg.useagent>
                                <gpg.executable>/usr/local/Cellar/gnupg@1.4/1.4.23_1/bin/gpg1</gpg.executable> <- use gpg1 on Mac OS X <gpg.homedir>~/.gnupg</gpg.homedir>  <- Update to your own directory <gpg.passphrase>******</gpg.passphrase> <- Add your passphrase </properties>
                        </profile>
                         -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
           | A convenience profile to re-generate the generated-platform-project before opening a PR
        -->
        <profile>
            <id>sync</id>
            <activation>
                <property>
                    <name>sync</name>
                </property>
            </activation>
            <properties>
                <quarkus.invoke-platform-project.skip>true</quarkus.invoke-platform-project.skip>
            </properties>
            <build>
                <defaultGoal>clean process-resources</defaultGoal>
            </build>
        </profile>
    </profiles>

</project>
